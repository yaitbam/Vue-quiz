{"remainingRequest":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yait-bam/Desktop/learn_vue/quiz/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/src/components/QuestionBox.vue","mtime":1568920211000},{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props: {\n        currentQuestion : Object,\n        next: Function\n    },\n    data(){\n        return {\n            selectedIndex: null\n        }\n    },\n    computed: {\n        answers(){\n          let answers =  [...this.currentQuestion.incorrect_answers]\n            //  console.log(answers)\n        //    return  answers.push(this.currentQuestion.correct_answer)\n            answers.push(this.currentQuestion.correct_answer)\n            console.log(answers)\n            return answers\n        }\n    },\n    watch: {\n        currentQuestion(){\n            this.selectedIndex = null\n            this.shuffleAnswers()\n        }\n    },\n    methods: {\n        selectAnswer(index){\n             this.selectedIndex = index\n        },\n        shuffleAnswers(){\n             let answers =  [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\n        }\n    },\n    mounted(){\n        console.log(this.currentQuestion)\n    }\n}\n",{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"question-box-container\">\n            <b-jumbotron>\n\n                <template v-slot:lead>\n                {{ currentQuestion.question }}\n                </template>\n\n                <hr class=\"my-4\">\n\n              \n                 <b-list-group>\n                    <b-list-group-item \n                    v-for=\"(answer, index) in answers\"\n                    :key=\"index\"\n                     @click=\"selectAnswer(index)\"\n                    :class=\"[selectedIndex === index ? 'selected' : '']\">\n                    {{ answer}}\n                    </b-list-group-item>\n                </b-list-group>\n\n                <b-button variant=\"primary\" href=\"#\">Submit</b-button>\n                <b-button  @click=\"next\" variant=\"success\" href=\"#\">\n                    Next\n                </b-button>\n            </b-jumbotron>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        currentQuestion : Object,\n        next: Function\n    },\n    data(){\n        return {\n            selectedIndex: null\n        }\n    },\n    computed: {\n        answers(){\n          let answers =  [...this.currentQuestion.incorrect_answers]\n            //  console.log(answers)\n        //    return  answers.push(this.currentQuestion.correct_answer)\n            answers.push(this.currentQuestion.correct_answer)\n            console.log(answers)\n            return answers\n        }\n    },\n    watch: {\n        currentQuestion(){\n            this.selectedIndex = null\n            this.shuffleAnswers()\n        }\n    },\n    methods: {\n        selectAnswer(index){\n             this.selectedIndex = index\n        },\n        shuffleAnswers(){\n             let answers =  [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\n        }\n    },\n    mounted(){\n        console.log(this.currentQuestion)\n    }\n}\n</script>\n\n<style scoped>\n    .list-group{\n        margin-bottom: 15px;\n    }\n    .list-group-item:hover{\n       background: #EEE;\n       cursor: pointer;\n    }\n    .btn{\n        margin: 0 5px;\n    }\n    .selected{\n        background-color: lightblue\n    }\n    .correct{\n        background-color: lightgreen\n    }\n    .incorrect{\n        background-color: lightred\n    }\n</style>\n\n"]}]}