{"remainingRequest":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yait-bam/Desktop/learn_vue/quiz/src/components/QuestionBox.vue?vue&type=style&index=0&id=62ab2b85&scoped=true&lang=css&","dependencies":[{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/src/components/QuestionBox.vue","mtime":1569000424000},{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yait-bam/Desktop/learn_vue/quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.list-group{\n    margin-bottom: 15px;\n}\n.list-group-item:hover{\n   background: #EEE;\n   cursor: pointer;\n}\n.btn{\n    margin: 0 5px;\n}\n.selected{\n    background-color: lightblue\n}\n.correct{\n    background-color: lightgreen\n}\n.incorrect{\n    background-color: red\n}\n",{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"question-box-container\">\n            <b-jumbotron>\n\n                <template v-slot:lead>\n                {{ currentQuestion.question }}\n                </template>\n\n                <hr class=\"my-4\">\n\n              \n                 <b-list-group>\n                    <b-list-group-item \n                    v-for=\"(answer, index) in answers\"\n                    :key=\"index\"\n                     @click=\"selectAnswer(index)\"\n                    :class=\"answerClass(index)\">\n                    {{ answer}}\n                    </b-list-group-item>\n                </b-list-group>\n\n                <b-button variant=\"primary\" @click=\"submitAnswer\" :disabled=\"selectedIndex === null || answered\"> <!--disabled if selectedIndex is null-->\n                    Submit\n                    </b-button>\n                <b-button  @click=\"next\" variant=\"success\" href=\"#\">\n                    Next\n                </b-button>\n            </b-jumbotron>\n    </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nimport { constants } from 'fs';\nexport default {\n    props: {\n        currentQuestion : Object,\n        next: Function,\n        increment: Function\n    },\n    data(){\n        return {\n            selectedIndex: null,\n            correctIndex: null,\n            shuffledAnswers: [],\n            answered: false\n        }\n    },\n    computed: {\n        answers(){\n          let answers =  [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\n            // answers.push(this.currentQuestion.correct_answer)\n\n             answers = _.shuffle(answers)\n            console.log(this.currentQuestion.correct_answer)\n            this.correctIndex = answers.indexOf(this.currentQuestion.correct_answer)\n            return answers\n        }\n    },\n    watch: {\n        // currentQuestion(){\n        //     this.selectedIndex = null\n        //     // this.shuffleAnswers()\n        // }\n        currentQuestion: {     //We use currentQuestion as an object to save the problem that shuffledAnswers is null in the furst question\n            immediate: true,\n            handler(){\n                    this.selectedIndex = null\n                    this.answered = false\n            }\n        }\n    },\n    methods: {\n        selectAnswer(index){\n             this.selectedIndex = index\n            \n        },\n        submitAnswer(){\n            let isCorrect = false\n\n            if(this.selectedIndex === this.correctIndex){\n                isCorrect = true\n            }\n            this.answered = true\n\n            this.increment(isCorrect)\n        },\n        answerClass(index){\n            let answerClass = ''\n            \n            if(!this.answered && this.selectedIndex === index){\n                answerClass = 'selected'\n            } else if(this.answered && this.correctIndex === index){\n                   answerClass = 'correct'\n            } else if(this.answered && this.selectedIndex === index && this.correctIndex !== index){\n                 answerClass = 'incorrect'\n            }\n\n            return answerClass\n        }\n    },\n    // mounted(){\n    //     // console.log(this.currentQuestion)\n    //     this.shuffledAnswers()\n    // }\n}\n</script>\n\n<style scoped>\n    .list-group{\n        margin-bottom: 15px;\n    }\n    .list-group-item:hover{\n       background: #EEE;\n       cursor: pointer;\n    }\n    .btn{\n        margin: 0 5px;\n    }\n    .selected{\n        background-color: lightblue\n    }\n    .correct{\n        background-color: lightgreen\n    }\n    .incorrect{\n        background-color: red\n    }\n</style>\n\n"]}]}